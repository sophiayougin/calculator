{"version":3,"sources":["Buttons.js","App.js","reportWebVitals.js","index.js"],"names":["Buttons","className","name","onClick","e","props","onHandleInput","target","id","React","Component","App","clear","setState","input","num","accumlator","operator","flag","isNumber","temp","parseFloat","isNaN","isOperator","op","includes","calculate","n","m","result","n1","n2","handleNumberInput","button","previous","state","toString","concat","handleOperatorInput","handleInput","this","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50fc53de.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Buttons extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className='buttons'>\r\n                <div className='row-1'>\r\n                    <button name='clear'className='clear' onClick={e => this.props.onHandleInput(e.target.name)}>C</button>\r\n                    <button name='/'className='operator' onClick={e => this.props.onHandleInput(e.target.name)}>/</button>\r\n                    <button name='*'className='operator' onClick={e => this.props.onHandleInput(e.target.name)}>X</button>\r\n                </div>\r\n                <div className='row-2'>\r\n                    <button name='7'className='numbers' onClick={e => this.props.onHandleInput(e.target.name)}>7</button>\r\n                    <button name='8'className='numbers' onClick={e => this.props.onHandleInput(e.target.name)}>8</button>\r\n                    <button name='9'className='numbers' onClick={e => this.props.onHandleInput(e.target.name)}>9</button>\r\n                    <button name='-'className='operator' onClick={e => this.props.onHandleInput(e.target.name)}>-</button>\r\n                </div>\r\n                <div className='row-3'>\r\n                    <button name='4'className='numbers' onClick={e => this.props.onHandleInput(e.target.name)}>4</button>\r\n                    <button name='5'className='numbers' onClick={e => this.props.onHandleInput(e.target.name)}>5</button>\r\n                    <button name='6' className='numbers' onClick={e => this.props.onHandleInput(e.target.name)}>6</button>\r\n                    <button name='+' className='operator' onClick={e => this.props.onHandleInput(e.target.name)}>+</button>\r\n                </div>\r\n                <div className='row-4'>\r\n                    <button name='1' className='numbers' onClick={e => this.props.onHandleInput(e.target.name)}>1</button>\r\n                    <button name='2' className='numbers' onClick={e => this.props.onHandleInput(e.target.name)}>2</button>\r\n                    <button name='3' className='numbers' onClick={e => this.props.onHandleInput(e.target.name)}>3</button>\r\n                    <button name='=' id='equal' onClick={e => this.props.onHandleInput(e.target.name)}>=</button>\r\n                    </div>\r\n                <div className='row-5'>\r\n                    <button name='0' className='numbers' id='zero' onClick={e => this.props.onHandleInput(e.target.name)}>0</button>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Buttons","import React from 'react';\nimport './App.css';\nimport Buttons from './Buttons';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      input : '',\n      num: '',\n      accumlator: 0,\n      operator: '',\n      flag: false\n    }\n  }\n  clear = () =>{\n    this.setState({\n      input : '',\n      num: '',\n      accumlator: 0,\n      operator: '',\n      flag: false\n    });\n  }\n  isNumber = (num) =>{\n    let temp = parseFloat(num)\n    if(isNaN(temp)){\n      return false;\n    }else{\n      return true;\n    }\n  }\n  isOperator = (op) =>{\n    const operators = ['+','-','*','/'];\n    if(operators.includes(op)){\n      return true;\n    }else{\n      return false;\n    }\n  }\n  calculate = (n,m,op) =>{\n    let result = 0;\n    if(this.isNumber(n) && this.isNumber(m) && this.isOperator(op)){\n      let n1 = parseFloat(n);\n      let n2 = parseFloat(m);\n      switch(op){\n        case '+':\n          result = n1 + n2;\n          break;\n        case '-':\n          result = n1 - n2;\n          break;\n        case '*':\n          result = n1 * n2;\n          break;\n        case '/':\n          result = n1 / n2;\n          break;\n        default:\n          break;\n      }\n    }\n    return result;\n  }\n  handleNumberInput = (button) => {\n    let previous;\n    if(this.state.num === '' && this.state.operator === ''){\n      if(this.state.flag && this.state.accumlator !== 0){\n        this.setState({\n          input: button,\n          accumlator: 0,\n          flag: false\n        });\n      }else if(!this.state.flag && this.state.accumlator === 0){\n        previous = this.state.input.toString();\n        this.setState({\n          input: previous.concat(button)\n        });\n      }\n    }else if(this.state.accumlator!== 0 && this.state.operator !== ''){\n      previous = this.state.input.toString();\n      let temp = this.state.num;\n        this.setState({\n          input: previous.concat(button),\n          num: temp.concat(button),\n        });\n    }\n  }\n  handleOperatorInput = (button) =>{\n    let previous;\n    if(this.state.input !=='' && this.state.operator === ''){\n      previous = this.state.input.toString();\n      this.setState({\n        input: previous.concat(button),\n        accumlator: previous,\n        operator: button\n      });\n    }else if(this.state.accumlator !== 0 && this.state.num !=='' && this.state.operator !== ''){\n      previous = this.state.input.toString();\n      const result = this.calculate(this.state.accumlator,this.state.num,this.state.operator);\n      this.setState({\n        input: result.toString().concat(button),\n        num: '',\n        accumlator: result,\n        operator: button\n      });\n    }\n  }\n  handleInput = (button) =>{\n    if (this.isNumber(button)) {\n      this.handleNumberInput(button)\n    }else if(this.isOperator(button)){\n      this.handleOperatorInput(button);\n    }else if(button === \"=\" && this.state.accumlator !== 0 && this.state.num !== ''){\n      const result = this.calculate(this.state.accumlator,this.state.num,this.state.operator);\n      this.setState({\n        accumlator: result,\n        input: result,\n        operator: '',\n        num: '',\n        flag: true\n      });\n    }else if(button === 'clear'){\n      this.clear();\n    }\n  }\n  render(){\n    return(\n      <div className='app'>\n        <div className='middle-container'>\n          <div className='input' >{this.state.input}\n            <p>={this.state.accumlator}</p>\n          </div>\n          <Buttons onHandleInput={this.handleInput}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}